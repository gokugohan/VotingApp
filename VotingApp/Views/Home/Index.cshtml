@model IEnumerable<VotingApp.Data.Area>
@{
    ViewData["Title"] = "Voting App Demo";

    //if (!User.Identity.IsAuthenticated)
    //{
    //    Layout = "_LayoutIndex";
    //}
    //else
    //{
    //    Layout = "_Layout";
    //}
    var total_vote = String.Format("{0:#.##0,##}", @ViewData["TotalVote"]);
}



@section css{
    <style>

        #canvas {
            width: 100%;
            min-height: 500px;
            margin: 1em auto;
        }

        #canvas-graph-candidate-municipality {
            /*min-width: 310px;*/
            /*max-width: 1200px;*/
            min-height: 600px;
            margin: 0 auto;
        }

        .btn-candidate.active {
            color: #17a2b8 !important;
            background-color: white !important;
        }

        .btn-view-candidate-votes:hover, .btn-view-candidate-votes:hover span, .btn-view-candidate-votes:hover i {
            cursor: pointer;
            color: #45b649;
            background: #fff;
        }

        .button-list-of-candidates-top {
        }

            .button-list-of-candidates-top .btn-view-candidate-votes {
                color: #fff;
                text-transform: uppercase;
                /*width: 100%;*/
            }

                .button-list-of-candidates-top .btn-view-candidate-votes:hover {
                    cursor: pointer;
                    color: #45b649;
                    background: #fff;
                }

        .card-chart .chart-area {
            height: auto;
        }

        .btn-tab-votings a.selected, .btn-tab-votings a:hover {
            border-color: #e14eca !important;
            background: #ba54f5 !important;
            background-color: #ba54f5 !important;
            color: #fff !important;
        }

        .modal-very-large{
            max-width:90% !important;
        }
    </style>
}

<div class="card card-chart">
    <div class="card-header ">
        <div class="row">
            <div class="col-sm-6 text-left">
                <h2 class="card-title">"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit..."</h2>
                <h5 class="card-category">"There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain..."</h5>

            </div>
            <div class="col-sm-6">
                <div class="btn-group btn-tab-votings btn-group-toggle float-right" data-toggle="buttons">


                    <a id="municipality-tab" data-toggle="tab" href="#municipality-content" role="tab"
                       aria-controls="municipality" aria-selected="true"
                       class="btn btn-sm btn-primary btn-simple selected">VOTINGS BY MUNICIPALITY</a>
                    <a href="#!" data-toggle="modal" data-target="#mapModal"
                       class="btn btn-sm btn-primary btn-simple" aria-selected="false">VOTINGS BY MUNICIPALITY [MAP]</a>
                    <a id="candidate-voting-tab" data-toggle="tab" href="#candidate-voting-content" role="tab"
                       aria-controls="candidate-voting" aria-selected="false"
                       class="btn btn-sm btn-primary btn-simple">PARTY VOTES IN MUNICIPALITY</a>
                </div>
            </div>
        </div>
    </div>

    <div class="card-body">
        <div id="myTab2Content" class="tab-content">

            <div id="municipality-content" role="tabpanel" aria-labelledby="home-tab" class="tab-pane fade px-4 py-5 show active">
                <div class="row">
                    <div class="col-md-12">
                        <h3>Total Vote : @total_vote</h3>
                        <br />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="card border-0 shadow-sm rounded">
                                    <div class="card-body p-4">
                                        <div class="table-responsive ps">
                                            <table id="table-votes" class="table">
                                                <thead>
                                                    <tr>
                                                        <th>Party Name</th>
                                                        <th>Votes</th>
                                                        <th>%</th>
                                                    </tr>
                                                </thead>
                                                <tbody></tbody>
                                            </table>
                                        </div>


                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div id="table-chart"></div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div id="candidate-voting-content" role="tabpanel" aria-labelledby="profile-tab" class="tab-pane fade px-4 py-5">
                <div id="canvas-municipality-candidate-votes"></div>
            </div>
        </div>
    </div>
</div>


<div class="card card-chart">
    <div class="card-header">
        <h2 class="card-title">"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit..."</h2>
        <h5 class="card-category">"There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain..."</h5>

    </div>
    <div class="card-body">
        <div class="btn-group flex-wrap btn-group-toggle button-list-of-candidates-top"
             data-toggle="buttons">
        </div>
        <div class="chart-area">
            <div id="canvas-graph-candidate-municipality" class="mt-3"></div>
        </div>
        @*<div id="canvas-graph-candidate-municipality" class="mt-3"></div>*@
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="mapModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-very-large" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">VOTINGS BY MUNICIPALITY</h5>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="tim-icons icon-simple-remove"></i>
                </button>
            </div>
            <div class="modal-body">
                <div id="map-canvas-graph-candidate-municipality" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>


<input type="hidden" value="@ViewBag.TotalVote" id="TotalVote" />
@section scripts{
    <script src="https://code.highcharts.com/maps/highmaps.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>

    <script src="https://code.highcharts.com/modules/data.js"></script>

    <script src="https://code.highcharts.com/modules/drilldown.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>

    @*<script src="https://code.highcharts.com/maps/highmaps.js"></script>
        <script src="https://code.highcharts.com/highcharts.js"></script>
        <script src="https://code.highcharts.com/modules/exporting.js"></script>
        <script src="https://code.highcharts.com/modules/offline-exporting.js"></script>
        <script src="https://code.highcharts.com/modules/accessibility.js"></script>*@
    @*<script src="~/js/mapa.js"></script>*@

    <script>

        $(document).ready(function () {

            connection.on("OnbroadcastVotingDataListener", function (message) {
                GetVotesMunicipalityByCandidate(null, "Votings By Municipality");
                display_table_candidates_votings();
                get_candidate_voting_municipalities();
            });


            $(".btn-tab-votings a").on("click", function () {
                $(".btn-tab-votings a").removeClass("active");
                $(".btn-tab-votings a").removeClass("selected");
                $(this).addClass("selected");
            });


            display_table_candidates_votings();

            var candidate_ids = [];
            $.ajax({
                url: "/Candidates/GetCandidadesAjax",
                type: "get",
                success: function (response) {
                    var candidate_button_groups_top = '<a href="#!" id="btn-view-all-votes" class="btn btn-sm btn-primary active btn-simple btn-view-candidate-votes" data-display-all="1" data-name="Voting by Municipality">All by Municipality</a>';

                    candidate_ids.push("btn-view-all-votes");

                    $.each(response, function (i, v) {
                        candidate_ids.push(v.id);

                        candidate_button_groups_top += '<a href="#!" class="btn btn-sm btn-primary btn-simple btn-view-candidate-votes" data-name="' + v.name + '" id="' + v.id + '">';
                        candidate_button_groups_top += v.name;
                        candidate_button_groups_top += '</a>';

                    })

                    $(".button-list-of-candidates-top").html(candidate_button_groups_top);

                    addEvenListenerToCandidatesButtoncandidates(candidate_ids);
                }
            });

            function addEvenListenerToCandidatesButtoncandidates(candidate_ids) {
                candidate_ids.forEach(function (id) {

                    $("body").on("click", "#" + id, function () {
                        $(".btn-view-candidate-votes").removeClass("active");
                        var title = $(this).data("name");
                        //console.log(title);

                        if ($(this).data("display-all") == "1") {
                            GetVotesMunicipalityByCandidate(null, title);
                            get_data_for_map(title);
                        } else {
                            GetVotesMunicipalityByCandidate(id, title);
                        }

                    })

                });
            }



            function graphByMunicipality(dataList, title) {
                var categories = [];
                var series_data = [];
                //console.log(dataList);

                $.each(dataList, function (i, v) {
                    categories.push(v.areaName);
                    if (v.data != null) {
                        series_data.push({
                            name: v.municipality,
                            y: v.data.totalVote,
                            data: [v.data.totalVote]
                        });
                    } else {
                        series_data.push({
                            name: v.municipality,
                            y: 0,
                            data: [0]
                        });
                    }

                })

                Highcharts.chart('canvas-graph-candidate-municipality', {
                    //colors: ['#FF0000', '#00FF00', '#0000FF', '#550000', '#005500', '#543445', '#325215', '#554433', '#223344'
                    //    , '#af505a', '#0a003f', '#0ff055', '#569055'],

                    chart: {
                        type: 'column',
                        backgroundColor: "#27293da3",
                    },
                    title: {
                        text: title,
                        style: {
                            color: '#ffffff',
                        }
                    },
                    subtitle: {
                        text: 'Election 2023',
                        style: {
                            color: '#ffffff',
                        }
                    },
                    accessibility: {
                        announceNewData: {
                            enabled: true
                        }
                    },
                    xAxis: {
                        type: 'category',
                        labels: {
                            style: {
                                color: '#fff'
                            }
                        }
                    },
                    yAxis: {

                        title: {
                            text: 'Total votes',
                            style: {
                                color: '#ffffff',
                                fontWeight: 'bold',
                                fontSize: '12px'
                            }
                        },
                        labels: {
                            style: {
                                color: '#fff'
                            }
                        }

                    },
                    legend: {
                        enabled: false
                    },
                    plotOptions: {
                        series: {
                            borderWidth: 0,
                            dataLabels: {
                                enabled: true,
                                format: '{point.y} votes'
                            }
                        }
                    },


                    tooltip: {
                        headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                        pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y}</b> votes<br/>'
                    },
                    exporting: {
                        buttons: {
                            contextButton: {
                                symbolStroke: "#fff",
                                theme: {
                                    fill: "#404360"
                                }
                            }
                        }
                    },

                    series: [
                        {
                            name: "Votes",
                            colorByPoint: true,
                            data: series_data
                        }
                    ],
                    credits: {
                        enabled: false
                    },
                });
            }


            function display_table_candidates_votings() {
                showPreLoader();
                $.ajax({
                    url: "/Votings/GetTotalVoteOfCandidates",
                    type: "get",
                    success: function (response) {
                        var tbody = "";
                        //console.log("GetTotalVoteOfCandidates");
                        //console.log(response);
                        var totalVote = parseInt($("#TotalVote").val());
                        $.each(response, function (index, value) {
                            tbody += "<tr>";
                            tbody += "<td>" + index + "</t>";
                            tbody += "<td>" + value + "</t>";
                            tbody += "<td>" + ((value / totalVote)*100).toFixed(2) + "%</t>";
                            tbody += "</tr>";
                        });

                        $("#table-votes tbody").html(tbody);

                        render_chart_from_table();
                    },
                    error: function (err) {
                        toastr.error(err);
                    }
                }).done(function (e) {
                    hidePreLoader();
                })

            }

            function render_chart_from_table() {
                Highcharts.chart("table-chart", {
                    data: {
                        table: "table-votes",
                        startRow: 0,
                        startColumn: 0,
                        endColumn: 1
                    },
                    chart: {
                        type: "pie",
                        backgroundColor: "#27293da3",

                        options3d: {
                            enabled: true,
                            alpha: 45,
                            beta: 0
                        }
                    },
                    title: {
                        text: "Election 2023",
                        style: {
                            color: '#ffffff',
                        }
                    },

                    subtitle: {
                        text: "Total votes : " + $("#TotalVote").val(),
                        style: {
                            color: '#ffffff',
                        }
                    },
                    xAxis: {
                        title: {
                            text: null
                        },
                        labels: {
                            style: {
                                color: '#fff'
                            }
                        },
                    },
                    yAxis: {
                        title: {
                            text: "Total Votes"
                        },
                        labels: {
                            style: {
                                color: '#fff'
                            }
                        },
                    },
                    legend: {
                        enabled: true
                    },

                    tooltip: {
                        pointFormat: "Total votes: <b>{point.y} votes</b>"
                    },
                    exporting: {
                        buttons: {
                            contextButton: {
                                symbolStroke: "#fff",
                                theme: {
                                    fill: "#404360"
                                }
                            }
                        }
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                formatter: function () {
                                    var totalVote = parseInt($("#TotalVote").val());
                                    var vote = parseInt(this.point.y);

                                    var percentageAoTotal = (parseFloat(vote / totalVote) * 100);

                                    return '<b>' + this.point.name + ' : ' + this.point.y + '<b> (' + percentageAoTotal.toFixed(2) + ')%';
                                    //enabled: true,
                                    //format: '<b>{point.name}</b>: {point.percentage:.1f} %  - ' + (point.name/$("#TotalVote").val())
                                }
                            }
                        }
                    },
                    credits: {
                        enabled: false
                    },
                });
            }


            GetVotesMunicipalityByCandidate(null, "VOTINGS BY MUNICIPALITY");
            get_data_for_map("VOTINGS BY MUNICIPALITY");

            function GetVotesMunicipalityByCandidate(id, title) {
                //showPreLoader();
                var url = "/Votings/ListVotingInMunicipality";
                if (id != null) {
                    url = "/Votings/ListVotingInMunicipality/" + id;
                }
                $.ajax({
                    url: url,
                    method: "get",
                    success: function (response) {
                        let dataList = [];
                        //console.log(response);
                        $.each(response, function (i, v) {
                            dataList.push({
                                municipality: v.key,
                                data: v.value
                            });
                        });

                        graphByMunicipality(dataList, title);
                    },
                    error: function (err) {
                        console.log(err);
                    }
                }).done(function (e) {
                    //hidePreLoader();
                })
            }


            get_candidate_voting_municipalities();



            // Get municipalities, then get the vote of candidates in the selected municipality
            // and the list all in the list of municipalities.
            // ie: 1 municipality contains all candidates and the related votes

            // Query > municipality id

            function get_candidate_voting_municipalities() {
                let categories = [];
                let data = [];

                @foreach (var d in Model)
                {
                    @:categories.push("@d.Name");
                }
                let candidates = [];

                @foreach (var c in ViewBag.candidates)
                {
                    @:candidates.push("@c.Id");
                }

                $.ajax({
                    url: "/Votings/GetCandidateMunicipalitVotes",
                    method: "get",
                    success: function(response) {
                        $.each(response, function (i, v) {
                            data.push({
                                name: v.candidate.name,
                                data: v.votes
                            });
                        });
                        display_graph_municipality_candidate_votes(categories, data);
                    },
                    error: function (err) {
                        console.log(err);
                    }
                }).done(function (e) {
                    hidePreLoader();
                })

            } //get_municipalities


            function display_graph_municipality_candidate_votes(categories, data) {

                Highcharts.chart('canvas-municipality-candidate-votes', {
                    chart: {
                        type: 'column',
                        backgroundColor: "#27293da3",
                        polar: true,
                    },
                    title: {
                        text: 'PARTY VOTES IN MUNICIPALITY',
                        style: {
                            color: '#ffffff',
                        }
                    },
                    subtitle: {
                        text: ''
                    },
                    style: {
                        color: '#ffffff',
                    },
                    xAxis: {
                        categories: categories,
                        crosshair: true,
                        title: {
                            text: null,

                        },
                        labels: {
                            style: {
                                color: '#fff'
                            }
                        }

                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Number of votes',
                            style: {
                                color: '#fff'
                            }
                        },

                        labels: {
                            style: {
                                color: '#fff'
                            }
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                            '<td style="padding:0"><b>{point.y}</b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    legend: {
                        itemStyle: { color: '#fff', }
                    },
                    exporting: {
                        buttons: {
                            contextButton: {
                                symbolStroke: "#fff",
                                theme: {
                                    fill: "#404360"
                                }
                            }
                        }
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                    series: data,
                    credits: {
                        enabled: false
                    },
                });
            }


            function get_vote_by_municipality(municipalityCode) {
                $.ajax({
                    url: "/Votings/getCandidatesByMunicipality/" + municipalityCode,
                    method: "get",
                    success: function (response) {
                        //console.log(response);
                        let map_series_data = [];
                        $.each(response, function (i, v) {
                            map_series_data.push([
                                v.areaKey,
                                v.total
                            ]);
                            //renderMap(data);
                        });

                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }


            // Maps
            /*get_data_for_map();*/

            function get_data_for_map(title) {
                let map_series_data = [];
                $.ajax({
                    url: "/Votings/ListVotingInMunicipality",
                    method: "get",
                    success: function (response) {

                        $.each(response, function (i, v) {

                            map_series_data.push([
                                v.value.areaKey,
                                v.value.totalVote

                            ]);
                        });

                        render_map(map_series_data,title);
                    },
                    error: function (err) {
                        console.log(err);
                    }
                }).done(function (e) {
                    //hidePreLoader();
                })
            }
            function render_map(data,title) {
                //console.log(data);
                (async () => {

                    const topology = await fetch('/js/tl-all.topo.json').then(response => response.json());

                    // Create the chart
                    Highcharts.mapChart('map-canvas-graph-candidate-municipality', {
                        chart: {
                            map: topology,
                            //backgroundColor: "#27293da3",
                            polar: true,
                        },

                        title: {
                            text: title,
                            style: {
                                color: '#ffffff',
                            }
                        },

                        legend: {
                            title: {
                                text: 'Number of votes in each municipality',
                                style: {
                                    color: '#ffffff',
                                }
                            }
                        },

                        mapNavigation: {
                            enabled: false,
                            buttonOptions: {
                                verticalAlign: 'bottom'
                            }
                        },

                        colorAxis: {
                            min: 0
                        },

                        plotOptions: {

                            column: {
                                colorByPoint: true
                            },
                            series: {
                                allowPointSelect: true,
                                states: {
                                    select: {
                                        color: '#e5190a',
                                        lineWidth: 0
                                    }
                                },
                                point: {
                                    events: {
                                        click: function () {
                                            console.log(this);
                                        }
                                    }
                                }
                            }
                        },

                        tooltip: {
                            backgroundColor: 'none',
                            style: {
                                color:'#fff'
                            },
                            borderWidth: 0,
                            shadow: false,
                            useHTML: true,
                            padding: 0,
                            pointFormat: '<span class="f32"><span class="flag {point.properties.hc-key}">' +
                                '</span></span> {point.name}<br>' +
                                '<span style="font-size: 15px;font-weight: bold; color:#fff;">{point.value}</span>',
                            positioner: function () {
                                return { x: 20, y: 12 };
                            }
                        },
                        legend: {
                            layout: 'vertical',
                            align: 'right',
                            verticalAlign: 'middle',
                            itemMarginTop: 10,
                            itemMarginBottom: 10
                        },
                        credits: {
                            enabled: false
                        },
                        series: [{
                            data: data,
                            name: 'Total vote',
                            color: Highcharts.getOptions().colors[2],
                            states: {
                                hover: {
                                    color: '#c30734'
                                }
                            },
                            dataLabels: {
                                enabled: true,
                                format: '{point.name}|{point.value}'
                            }
                        }],
                        exporting: {
                            enabled: true,
                            chartOptions: {
                                chart: {
                                    height: 650,
                                    width: 1250,
                                    marginBottom: 70,

                                    // events: {
                                    //   load: function () {
                                    //     var renderer = this.renderer;
                                    //     renderer.text('<i>Source : ' + objData['data_source'] + '</i>', 1150, 640).css({
                                    //       width: '400px',
                                    //       align: 'center',
                                    //     }).add();
                                    //   }
                                    // }
                                },
                            },
                            filename: "total_vote_by_municipality" + getDate()

                        },
                    });



                })();
            }
        });

        function getDate() {
            let d = new Date();
            let datestring = d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes();
            return (datestring.replace(':', '.'))

        }
    </script>

}
